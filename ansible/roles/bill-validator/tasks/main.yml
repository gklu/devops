# - name: setup ssh key
#   cs_sshkeypair:
#     name: bill-ssh-key
#     public_key: "{{ lookup('file', './.ssh/id_rsa.pub') }}"
#   delegate_to: localhost

# - name: lunch daily centos 6 vm
#   cs_instance:
#     name: centos6-bill
#     display_name: centos6-bill
#     template: centos65_x86_64
#     service_offering: t2.micro
#     network: app
#     ssh_key: bill-ssh-key
#     disk_offering: Small
#     state: started
#     tags:
#       - key: purpose
#         value: billing
#   delegate_to: localhost
#   register: instance_state

# - debug:
#     msg: "{{ instance_state.state }}"

# - name: enable static NATs
#   cs_staticnat: 
#     vm: "{{ inventory_hostname_short }}" 
#     ip_address: "{{ public_ip }}"
#     vpc: dfas-vpc
#     network: app
#   when: public_ip is defined
#   delegate_to: localhost
#   register: nat_state

# - debug:
#     msg: "{{ nat_state }}"

# - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
#   wait_for:
#     port: 22
#     host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
#     search_regex: OpenSSH
#     delay: 10
#   vars:
#     ansible_connection: local

- name: check for the uptime
  shell: uptime | awk '{print $3}'
  register: uptime
#   until: uptime.stdout == "3"
#   retries: 100
#   delay: 10

- name: check host name
  command: hostname -f
  register: hostname

- debug:
    msg: "{{ hostname }}"

- name: show uptime
  debug:
    msg: "{{ uptime.stdout }}"

# - name: expunge the instance
#   cs_instance:
#     name: "{{instance_state.display_name }}"
#     state: expunged
#   delegate_to: localhost
#   register: instance_state

# - debug:
#     msg: "{{instance_state}}"


