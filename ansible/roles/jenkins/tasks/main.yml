---
# tasks file for jenkins
- name: open http and https services
  firewalld:
    service: "{{item}}"
    zone: public
    immediate: yes
    permanent: yes
    state: enabled
  loop:
    - http
    - https

- name: create jenkins group
  group:
    name: jenkins
    gid: 1001
    state: present

- name: create jenkins user
  user:
    name: jenkins
    uid: 1001
    group: jenkins

- name: install openjdk11 for local slave
  yum:
    name: java-11-openjdk
    state: latest

- name: create file structure for the jenkins
  file:
    path: "{{ item }}"
    state: directory
    group: jenkins
    owner: jenkins
  loop:
    - "{{ jenkins_home }}/jk_secrets"
    - "{{ docker_home }}"

- name: copy docker files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    group: jenkins
    owner: jenkins
  loop:
    - {src: 'docker-compose.yml.j2',dest: '{{ docker_home }}/docker-compose.yml'}
    - {src: 'dockerfile_jenkins.j2',dest: '{{docker_home}}/dockerfile_jenkins'}
    - {src: 'plugins.txt.j2',dest: '{{docker_home}}/plugins.txt'}
    - {src: 'jenkins.env.j2',dest: '{{docker_home}}/jenkins.env'}


- name: copy conf files
  copy:
    src: "{{jenkins_yaml}}"
    dest: "{{jenkins_home}}/jenkins.yaml"
    owner: jenkins
    group: jenkins


- name: add secrets files
  copy:
    content: "{{ item.src }}"
    dest: "{{jenkins_home}}/jk_secrets/{{ item.dest }}"
    # group: jenkins
    # owner: jenkins
    group: jenkins
    owner: jenkins
  loop:
    - {src: "{{docker_agent_ip}}",dest: "docker_agent_ip"}
    - {src: "{{jenkins_ps}}",dest: "jenkins_ps"}
    - {src: "{{vdonkor_ps}}",dest: "vdonkor_ps"}
    - {src: "{{sshkey}}" ,dest: "sshkey"}

- name: clean sshkey file
  shell: cat sshkey | awk '{$1=$1;print}' > tempssh && mv tempssh sshkey && chown jenkins:jenkins sshkey
  args:
    chdir: "{{jenkins_home}}/jk_secrets"
    
- name: build the docker image
  docker_image:
    build:
      path: "{{ docker_home }}"
      dockerfile: "{{ dockerfile }}"
    name: master/jenkins
    state: present

- name: start the jenkins
  docker_compose:
    project_src: "{{ docker_home }}"
    state: present

# - name: Init a new swarm with default parameters
#   docker_swarm:
#     state: present

# - name: check if secret is already created
#   shell: docker secret ls -f name=jenkinsAdmin | wc -l
#   register: output_secret

# - debug:
#     msg: "{{ output_secret.stdout }}"

# - name: set docker secret user
#   shell: echo {{ jenkinsAdmin }} | docker secret create jenkinsAdmin -
#   when: output_secret.stdout == "1"
#   register: output

# - name: deploy jenkins
#   command:  docker stack deploy --compose-file {{ docker_compose_file }} jenkins
#   register: output

# - debug:
#     msg: "{{output.stdout }}"
